@prefix s-wf: <http://semantic-machines.com/veda/simple-workflow/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix v-wf: <http://www.w3.org/2001/veda-workflow/>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix s-wfc: <http://semantic-machines.com/veda/simple-workflow-cr/>.
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix td: <http://semantic-machines.com/veda/test-data/>.
@prefix d: <http://semantic-machines.com/veda/veda-data/>.
@prefix owl: <http://www.w3.org/2002/07/owl#> .

<http://semantic-machines.com/veda/net_complex_route>
  rdf:type owl:Ontology ;
  rdfs:label "Онтология комплексного маршрута"@ru ;
  rdfs:label "Complex route ontology"@en ;
  rdfs:isDefinedBy s-wf: ;
  v-s:loadPriority 21 ;
.

s-wf:net_complex_route a v-wf:Net;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:localVariable s-wf:var_right_1;
  v-wf:consistsOf
    s-wf:cr_start,
    s-wf:crf_start_to_car,
    s-wf:cr_check_already_run,
    s-wf:crf_car_to_finish,
    s-wf:cr_decrease_rights,
    s-wf:crf_dr_to_i,
    s-wf:cr_informing_task,
  s-wf:cr_introduction,
  s-wf:crf_i_to_intro,
    s-wf:crf_i_to_c1,
    s-wf:cr_c1,
    s-wf:crf_c1_to_c2,
    s-wf:crf_c1_to_jp,
    s-wf:cr_c2,
    s-wf:crf_c2_to_c3,
    s-wf:crf_c2_to_jp,
    s-wf:cr_c3,
    s-wf:crf_c3_to_c4,
    s-wf:crf_c3_to_jp,
    s-wf:cr_c4,
    s-wf:crf_c4_to_c5,
    s-wf:crf_c4_to_jp,
    s-wf:cr_c5,
    s-wf:crf_c5_to_c6,
    s-wf:crf_c5_to_jp,
    s-wf:cr_c6,
    s-wf:crf_c6_to_jp,
    s-wf:cr_join_point,
    s-wf:crf_jp_to_rework,
    s-wf:cr_rework,
    s-wf:crf_rework_to_c1,
    s-wf:crf_rework_to_c2,
    s-wf:crf_rework_to_c3,
    s-wf:crf_rework_to_c4,
    s-wf:crf_rework_to_c5,
    s-wf:crf_rework_to_c6,
    s-wf:crf_rework_to_rr,
    s-wf:crf_rework_to_s,
    s-wf:crf_rework_to_a,
    s-wf:cr_sign,
    s-wf:crf_s_to_a,
    s-wf:crf_s_to_jp,
    s-wf:cr_approval,
    s-wf:crf_a_to_e,
    s-wf:crf_a_to_i,
    s-wf:crf_a_to_r,
    s-wf:crf_a_to_ai,
    s-wf:cr_instruction,
    s-wf:crf_i_to_i2,
    s-wf:cr_examination,
    s-wf:crf_e_to_i2,
    s-wf:cr_auto_instruction,
    s-wf:cr_review,
    s-wf:crf_r_to_i2,
    s-wf:cr_instruction2,
    s-wf:crf_i2_to_i3,
    s-wf:cr_instruction3,
    s-wf:crf_i3_to_d,
    s-wf:cr_distribution,
    s-wf:crf_d_to_rr,
    s-wf:cr_restore_rights,
    s-wf:crf_rr_to_finish,
    s-wf:cr_finish;
  rdfs:label "Комплексный маршрут"@ru;
  v-wf:inputVariable
    s-wf:var_doc_id,
    s-wf:var_startForm_id,
  s-wf:var_journal_initiator;
.

s-wf:cr_start a v-wf:InputCondition;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "-300"^^xsd:integer;
  v-wf:locationY "500"^^xsd:integer;
  v-wf:belongsTo s-wf:net_complex_route;
  rdfs:label "Старт"^^xsd:string;
  v-wf:hasFlow s-wf:crf_start_to_car;
.

s-wf:crf_start_to_car a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_check_already_run;
  v-wf:predicate "true"^^xsd:string;
.

s-wf:cr_check_already_run a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "-150"^^xsd:integer;
  v-wf:locationY "495"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:hasFlow s-wf:cr_car_to_dr, s-wf:crf_car_to_finish;
  v-wf:executor s-wf:codelet_is_run;
  rdfs:label "Проверить, запущен ли?"^^xsd:string;
  v-wf:completedMapping s-wf:m_result_f_out_var;
  v-wf:startingMapping s-wf:map_doc_id;
.

s-wf:crf_car_to_finish a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_finish;
  v-wf:predicate "task_result.getValue('result')[0].data == 'true'"^^xsd:string;
.

s-wf:cr_decrease_rights a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "0"^^xsd:integer;
  v-wf:locationY "350"^^xsd:integer;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:hasFlow s-wf:crf_dr_to_i;
  v-wf:executor s-wf:codelet_down_right;
  rdfs:label "Понизить права"^^xsd:string;
  v-wf:completedMapping s-wf:map_get_rights;
  v-wf:startingMapping s-wf:map_doc_id;
.

s-wf:crf_dr_to_i a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_informing_task;
  v-wf:predicate "true"^^xsd:string;
.

s-wf:crf_i_to_c1 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:predicate "true"^^xsd:string;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_c1;
.

s-wf:cr_informing_task a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "150"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:OR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:subNet s-wf:NotificationNet;
  v-wf:hasFlow s-wf:crf_i_to_c1, s-wf:crf_i_to_intro;
  v-wf:executor s-wf:executor_informing ;
  rdfs:label "Рассылка"^^xsd:string;
.

s-wf:cr_introduction a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "150"^^xsd:integer;
  v-wf:locationY "100"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:executor s-wf:executor_introduction ;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  rdfs:label "Ознакомление"^^xsd:string;
.

s-wf:crf_i_to_intro a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_introduction;
  v-wf:predicate "true"^^xsd:string;
.

s-wf:cr_c1 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "300"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:hasFlow s-wf:crf_c1_to_c2, s-wf:crf_c1_to_jp;
  v-wf:executor s-wf:executor_coordination1 ;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  rdfs:label "Согласование 1"^^xsd:string;
.

s-wf:crf_c1_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == false";
.

s-wf:crf_c1_to_c2 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_c2;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == true";
.

s-wf:cr_c2 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "450"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:hasFlow s-wf:crf_c2_to_c3, s-wf:crf_c2_to_jp;
  v-wf:executor s-wf:executor_coordination2 ;
  rdfs:label "Согласование 2"^^xsd:string;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
.

s-wf:crf_c2_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == false";
.

s-wf:crf_c2_to_c3 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_c3;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == true";
.

s-wf:cr_c3 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "600"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:hasFlow s-wf:crf_c3_to_c4, s-wf:crf_c3_to_jp;
  v-wf:executor s-wf:executor_coordination3 ;
  rdfs:label "Согласование 3"^^xsd:string;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
.

s-wf:crf_c3_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == false";
.

s-wf:crf_c3_to_c4 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_c4;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == true";
.

s-wf:cr_c4 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "750"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:hasFlow s-wf:crf_c4_to_c5, s-wf:crf_c4_to_jp;
  v-wf:executor s-wf:executor_coordination4 ;
  rdfs:label "Согласование 4"^^xsd:string;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
.

s-wf:crf_c4_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == false";
.

s-wf:crf_c4_to_c5 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_c5;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == true";
.

s-wf:cr_c5 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "900"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:hasFlow s-wf:crf_c5_to_c6, s-wf:crf_c5_to_jp;
  v-wf:executor s-wf:executor_coordination5 ;
  rdfs:label "Согласование 5"^^xsd:string;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
.

s-wf:crf_c5_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == false";
.

s-wf:crf_c5_to_c6 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_c6;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == true";
.

s-wf:cr_c6 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1050"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:hasFlow s-wf:crf_c6_to_jp, s-wf:crf_c6_to_s;
  v-wf:executor s-wf:executor_coordination6 ;
  rdfs:label "Согласование 6"^^xsd:string;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
.

s-wf:crf_c6_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionAgreed')) == false";
.

s-wf:cr_join_point a v-wf:Condition;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "710"^^xsd:integer;
  v-wf:locationY "350"^^xsd:integer;
  v-wf:belongsTo s-wf:net_complex_route;
  rdfs:label ""^^xsd:string;
  v-wf:hasFlow s-wf:crf_jp_to_rework;
.

s-wf:crf_jp_to_rework a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_rework;
.

s-wf:cr_sign a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1200"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:hasFlow s-wf:crf_s_to_a, s-wf:crf_s_to_jp;
  v-wf:subNet s-wf:InterlayerNet;
  rdfs:label "Подписание"^^xsd:string;
  v-wf:executor s-wf:executor_sign ;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:startDecisionTransform s-wf:tr_sign_form;
.

s-wf:crf_s_to_jp a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_join_point;
  v-wf:predicate "task_result.is_exists_result (task_result) == true && task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionSign')) == false"^^xsd:string;
.

s-wf:crf_s_to_a a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:flowsInto s-wf:cr_approval;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionSign')) == true"^^xsd:string;
.

s-wf:cr_approval a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1350"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:split v-wf:OR;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:hasFlow s-wf:crf_a_to_jp, s-wf:crf_a_to_e, s-wf:crf_a_to_r, s-wf:crf_a_to_i, s-wf:crf_a_to_ai;
  rdfs:label "Утверждение"^^xsd:string;
  v-wf:executor s-wf:executor_approval;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completedMapping s-wf:m_result_f_out_var, s-wf:map_decision_of_set_responsible;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_approv_form;
.

s-wf:crf_a_to_e a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:flowsInto s-wf:cr_examination;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionApprove')) == true";
.

s-wf:crf_a_to_r a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:flowsInto s-wf:cr_review;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionApprove')) == true";
.

s-wf:crf_a_to_i a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:flowsInto s-wf:cr_instruction;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionApprove')) == true";
.

s-wf:crf_a_to_ai a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:flowsInto s-wf:cr_auto_instruction;
  v-wf:predicate "task_result.is_exists_result (task_result) == false || task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionApprove')) == true";
.

s-wf:cr_rework a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "770"^^xsd:integer;
  v-wf:locationY "-100"^^xsd:integer;
  v-wf:split v-wf:XOR;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:hasFlow s-wf:crf_rework_to_c1, s-wf:crf_rework_to_c2, s-wf:crf_rework_to_c3, s-wf:crf_rework_to_c4, s-wf:crf_rework_to_c5, s-wf:crf_rework_to_c6;
  v-wf:hasFlow s-wf:crf_rework_to_s, s-wf:crf_rework_to_a, s-wf:crf_rework_to_rr;
  v-wf:executor s-wf:executor_initiator;
  rdfs:label "Доработать"^^xsd:string;
  v-wf:expectedResultType s-wf:UserTaskForm;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:startDecisionTransform s-wf:tr_refine_form;
  v-wf:startingExecutorJournalMap s-wf:map_jrn_msg_nc_t2_b_remake, s-wf:map_jrn_msg_nc_t2_b_ev, s-wf:map_journal_to_4_PLV_responsible, s-wf:map_journal_doc_id, s-wf:map_journal_process_id ;
  v-wf:completedExecutorJournalMap s-wf:map_jrn_msg_nce_t2_b, s-wf:map_jrn_msg_nce_t2_b_ev, s-wf:map_journal_to_4_OOV_result_data_N_author, s-wf:map_journal_doc_id, s-wf:map_journal_process_id, s-wf:map_jrn_decision_b ;
  v-wf:startingMessageMap s-wf:map_msg_template_4_SV_default_template, s-wf:map_from_4_TIV_initiator, s-wf:map_document_4_TIV_docId, s-wf:map_vf_to_4_O_executor;
  v-wf:startingMessageMap s-wf:map_comment_4_TIV_actor_task_rework, s-wf:map_inbox_url_4_vedaInfo_appInboxUrl, s-wf:map_doc_url_4_vedaInfo_appUrl;
  v-wf:startingMessageMap s-wf:map_wf_from_4_TIV_initiator, s-wf:map_rdf_type_4_v_s_Email, s-wf:map_task_url_4_O_DecisionForms, s-wf:map_to_4_O_executor;
.

s-wf:crf_rework_to_c1 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_c1;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoCoordination1')) == true"^^xsd:string;
.

s-wf:crf_rework_to_c2 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_c2;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoCoordination2')) == true"^^xsd:string;
.

s-wf:crf_rework_to_c3 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_c3;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoCoordination3')) == true"^^xsd:string;
.

s-wf:crf_rework_to_c4 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_c4;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoCoordination4')) == true"^^xsd:string;
.

s-wf:crf_rework_to_c5 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_c5;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoCoordination5')) == true"^^xsd:string;
.

s-wf:crf_rework_to_c6 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_c6;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoCoordination6')) == true"^^xsd:string;
.

s-wf:crf_rework_to_s a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_sign;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoSign')) == true"^^xsd:string;
.

s-wf:crf_rework_to_a a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:flowsInto s-wf:cr_approval;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionGoApproval')) == true"^^xsd:string;
.

s-wf:crf_rework_to_rr a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "task_result.is_all_executors_taken_decision ('result', newUri ('v-wf:DecisionBreak')) == true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_restore_rights;
.

s-wf:cr_restore_rights a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "2050"^^xsd:integer;
  v-wf:locationY "-250"^^xsd:integer;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:hasFlow s-wf:crf_rr_to_finish;
  v-wf:executor s-wf:codelet_restore_right;
  rdfs:label "Восстановить права"^^xsd:string;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_orig_rights;
.

s-wf:crf_rr_to_finish a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:belongsTo s-wf:net_complex_route;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_finish;
.

s-wf:cr_finish a v-wf:OutputCondition;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "2200"^^xsd:integer;
  v-wf:locationY "500"^^xsd:integer;
  rdfs:label "Финиш"^^xsd:string;
  v-wf:belongsTo s-wf:net_complex_route;
.

s-wf:cr_instruction a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1500"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:hasFlow s-wf:crf_i_to_i2;
  v-wf:executor s-wf:executor_instruction;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_instruct_form;
  rdfs:label "Поручение"^^xsd:string;
.

s-wf:cr_instruction2 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:join v-wf:AND;
  v-wf:locationX "1650"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:hasFlow s-wf:crf_i2_to_i3;
  v-wf:executor s-wf:executor_instruction2;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_instruct_form;
  rdfs:label "Поручение"^^xsd:string;
.

s-wf:cr_instruction3 a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1800"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:hasFlow s-wf:crf_i3_to_d;
  v-wf:executor s-wf:executor_instruction3;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_instruct_form;
  rdfs:label "Поручение"^^xsd:string;
.

s-wf:crf_i_to_i2 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_instruction2;
.

s-wf:crf_i2_to_i3 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_instruction3;
.

s-wf:crf_i3_to_d a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_distribution;
.

s-wf:cr_examination a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1500"^^xsd:integer;
  v-wf:locationY "350"^^xsd:integer;
  v-wf:hasFlow s-wf:crf_e_to_i2;
  v-wf:executor s-wf:executor_examination;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_examin_form;
  rdfs:label "Ознакомление"^^xsd:string;
.

s-wf:cr_auto_instruction a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1500"^^xsd:integer;
  v-wf:locationY "-100"^^xsd:integer;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:subNet d:MeetingNet;
#  v-wf:executor s-wf:executor_auto_instruction;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_approv_form;
  rdfs:label "Автопоручение"^^xsd:string;
.

s-wf:cr_review a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1500"^^xsd:integer;
  v-wf:locationY "50"^^xsd:integer;
  v-wf:hasFlow s-wf:crf_r_to_i2;
  v-wf:executor s-wf:executor_review;
  v-wf:subNet s-wf:InterlayerNet;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:completeDecisionTransform s-wf:tr_taken_decision;
  v-wf:startDecisionTransform s-wf:tr_review_form;
  rdfs:label "Рассмотрение"^^xsd:string;
.

s-wf:crf_r_to_i2 a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_instruction2;
.

s-wf:cr_distribution a v-wf:Task;
  rdfs:isDefinedBy s-wfc: ;
  v-wf:locationX "1950"^^xsd:integer;
  v-wf:locationY "200"^^xsd:integer;
  v-wf:hasFlow s-wf:crf_d_to_rr;
  v-wf:subNet s-wf:NotificationNet;
  v-wf:startingMapping s-wf:map_doc_id, s-wf:map_initiator;
  v-wf:executor s-wf:executor_distribution;
  rdfs:label "Рассылка"^^xsd:string;
.

s-wf:crf_d_to_rr a v-wf:Flow;
  rdfs:isDefinedBy s-wfc: ;
  rdfs:label ""^^xsd:string;
  v-wf:predicate "true"^^xsd:string;
  v-wf:flowsInto s-wf:cr_restore_rights;
.

