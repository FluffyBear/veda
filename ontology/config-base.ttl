@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix v-wf: <http://semantic-machines.com/veda/veda-workflow/> .
@prefix v-s: <http://semantic-machines.com/veda/veda-schema/> .
@prefix v-ui: <http://semantic-machines.com/veda/veda-ui/> .
@prefix v-l: <http://semantic-machines.com/veda/veda-layout/> .
@prefix m-l: <http://semantic-machines.com/veda/mondi-layout/> .
@prefix cfg: <http://semantic-machines.com/veda/config/> .

@prefix cfgb: <http://semantic-machines.com/veda/config-base/> .
<http://semantic-machines.com/veda/config-base>
  rdf:type owl:Ontology ;
  rdfs:label "Veda system administrator ontology"@en ;
  rdfs:label "Онтология администратора системы Веда"@ru ;
#  owl:versionInfo "1.0" ;
  v-s:loadPriority 1 ;
.

cfg:Guest
  rdf:type v-s:Person ;
  v-s:firstName "Guest"@en ;
  v-s:firstName "Гость"@ru ;
  v-s:hasAccount cfg:GuestAccount ;
  rdfs:label "Guest"@en ;
  rdfs:label "Гость"@ru ;
.

cfg:GuestAccount
  rdf:type v-s:Account ;
  rdfs:label "Guest account"@en ;
  rdfs:label "Гостевая учетная запись"@ru ;
.


cfg:SuperAdmin
  rdf:type v-s:Group ;
  rdfs:label "Super admin"@en ;
  rdfs:label "Супер админ"@ru ;
.

cfg:ReadUser
  rdf:type v-s:Group ;
  rdfs:label "Read User"@en ;
  rdfs:label "Пользователи имеющие право на чтение"@ru ;
.

cfg:ReadResGroup
  rdf:type v-s:Group ;
  rdfs:label "Resource group to read"@en ;
  rdfs:label "Группа ресурсов для чтения"@ru ;
.

# --------------------------- обработка событий => привязка человека к группе должности ------------------------------
cfg:Event_0
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAccount ;
  v-s:created "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:published "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:filter v-s:Appointment ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = user whose actions triggered event
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 */

var doc = document,
	person_uri = getUri(document['v-s:employee']),
	position_uri = getUri(document['v-s:occupation']);

if (!person_uri || !position_uri) return;

var uri = 'd:membership_' + person_uri.split(':').join('_') + '_' + position_uri.split(':').join('_'),
	new_membership = {
	'@' : uri, 
	'rdf:type' : [{data: 'v-s:Membership', type : _Uri}],
	'v-s:memberOf' : [{data: position_uri, type : _Uri}],
	'v-s:resource'  : [{data: person_uri, type : _Uri}],
	'rdfs:comment'  : [{data: 'создано автоматически в обработчике cfg:Event_0', type : _String}],
};

if (document['v-s:deleted'] && document['v-s:deleted'][0] && document['v-s:deleted'][0].data === true) {
	new_membership['v-s:deleted'] = [{data: true, type : _Boolean}];
}

put_individual (ticket, new_membership, _event_id);
  """
.

# --------------------------- обработка событий => создание записей о правах ------------------------------
cfg:Event_1
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAccount ;
  v-s:created "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:published "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = user whose actions triggered event
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 */

var doc_uri = document['@'];
var isDefinedBy = document['rdfs:isDefinedBy'];
if (isDefinedBy) {
	var new_membership = {
		'@' : genUri (), 
		'rdf:type' : [{data: 'v-s:Membership', type : _Uri}],
		'v-s:memberOf' : [{data: 'cfg:ReadResGroup', type : _Uri}],
		'v-s:resource'  : [{data: doc_uri, type : _Uri}],
		'rdfs:comment'  : [{data: 'выдан cfg:Event_1', type : _String}]
	};
	put_individual (ticket, new_membership, _event_id);
}

var vs_owner = document['v-s:owner'];
if (vs_owner) {
	addRight(ticket, [can_read, can_update, can_delete], getUri(vs_owner), doc_uri);
	//print('#1 owner, doc_uri = ' + doc_uri + ', person = ' + getUri(vs_owner)); 
}

var vs_author = document["v-s:author"];
if (vs_author) {
    var author = get_individual(ticket, getUri(vs_author));
    if (author) {
		
		var author_type = getUri(author['rdf:type']);
		
		if (author_type == 'v-s:Person') {
			addRight(ticket, [can_read, can_update, can_delete], getUri(vs_author), doc_uri); 
			//print('#2 author = person, doc_uri = ' + doc_uri + ', person = ' + getUri(vs_author)); 
		} else {
			var ff = get_property_chain (ticket, document, 'v-s:author', 'v-s:occupation');
			if (ff) {
				var position_uri = getUri (ff['field']);
				var first_doc = ff['first'];
				if (first_doc) {
					doc_uri = first_doc['@'];	
					if (position_uri) {
						//print('#3 author = appointment, doc_uri = ' + doc_uri + ', position = ' + position_uri);
						addRight(ticket, [can_read, can_update, can_delete], position_uri, doc_uri);
					}
				}
			}
		}
    }
}
  """ ;
  rdfs:comment "скрипт автоматической выдачи прав авторам (v-s:author) и владельцам (v-s:owner)";
  rdfs:label "Event 1"@en ;
  rdfs:label "Событие 1"@ru ;
.

# --------------------------- обработка событий => создание Журнала документа ------------------------------
cfg:Event_1_1
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAccount ;
  v-s:created "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:published "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:filter v-s:Journaling ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = user whose actions triggered event
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 */

// No journaling for technical changes 
// No journaling for draft
if (!(document['v-s:isDraftOf'] && document['v-s:isDraftOf'].length>0
      || (document['v-s:hasDraft'] && document['v-s:hasDraft'].length>0))
    && !isTecnicalChange(document, prev_state)) {
    
	var ff = get_property_chain(ticket, document, 'v-s:author', 'v-s:employee');
	if (ff)
	{
	    var employee_uri = getUri(ff['field']);
		//print('0>'+employee_uri);
	    if (employee_uri)
	    {
	        var journal_uri = getJournalUri(document['@']);
	        //print('cfg:Event_1_1:journal journal_uri=' + journal_uri);
	        var exist_journal = get_individual(ticket, journal_uri);
			//print('0>'+exist_journal);
	        if (exist_journal)
	        {
		        // UPDATE DOCUMENT
		        var journal_record = newJournalRecord(journal_uri);
		        if (document['v-s:actualVersion'] && document['v-s:actualVersion'][0].data == document['@']) {
		        	journal_record['v-s:documentVersion'] = document['v-s:previousVersion'];	      
		        }
		        
		        if ((!prev_state['v-s:deleted'] || prev_state['v-s:deleted'].data =='false') && 
							(document['v-s:deleted'] && document['v-s:deleted'].data == 'true')) {
		            journal_record['rdf:type'] = [{data: 'v-s:DocumentDeleted',type: _Uri}];
		        } else {
		            journal_record['rdf:type'] = [{data: 'v-s:DocumentUpdated',type: _Uri}];	        
		        }
		        
			    journal_record['v-s:actor'] = [
		                        {
		                            data: user_uri,
		                            type: _Uri
		     			}];
					    	
		        //print("?*?"+toJson(journal_record));		
			    logToJournal(ticket, journal_uri, journal_record);
	        }
	        else
	        {
	            // CREATE DOCUMENT		
	            var new_journal = {
	                '@': journal_uri,
	                'rdf:type': [
	                    {
	                        data: 'v-s:Journal',
	                        type: _Uri
	                }],
	                'v-s:onDocument': [
	                    {
	                        data: document['@'],
	                        type: _Uri
	                }],
		    		'v-s:actor': [
	                        {
	                            data: user_uri,
	                            type: _Uri
	     			}]		
	            };
	            put_individual(ticket, new_journal, _event_id);
	            
	            var journal_record = newJournalRecord(new_journal);
	            if (document['v-s:actualVersion'] && document['v-s:actualVersion'][0].data == document['@']) {
		        	journal_record['v-s:documentVersion'] = document['v-s:previousVersion'];	      
		        }	            
	            journal_record['rdf:type'] = [{data: 'v-s:DocumentCreated', type: _Uri}];
				journal_record['v-s:actor'] = [{data: user_uri, type: _Uri}];
			    logToJournal(ticket, journal_uri, journal_record);
	
	            var new_journal_permission = {
	                '@': genUri(),
	                'rdf:type': [
	                    {
	                        data: 'v-s:PermissionStatement',
	                        type: _Uri
	                }],
	                'v-s:canDelete': [
	                    {
	                        data: true,
	                        type: _Bool
	                }],
	                'v-s:canRead': [
	                    {
	                        data: true,
	                        type: _Bool
	                }],
	                'v-s:canUpdate': [
	                    {
	                        data: true,
	                        type: _Bool
	                }],
	                'v-s:permissionObject': [
	                    {
	                        data: journal_uri,
	                        type: _Uri
	                }],
	                'v-s:permissionSubject': [
	                    {
	                        data: employee_uri,
	                        type: _Uri
	                }]
	            };
	            put_individual(ticket, new_journal_permission, _event_id);
	        }
	
	    }
	}
}
  """ ;
  rdfs:comment "скрипт автоматической выдачи прав авторам"@ru ;
  rdfs:label "Event_1"@en ;
  rdfs:label "Событие_1"@ru ;
.

cfg:Event_2
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAccount ;
  v-s:created "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:published "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:filter v-s:Department ;
  v-s:filter v-s:Position ;
  v-s:filter v-s:Appointment ;
  v-s:filter v-s:Person ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = user whose actions triggered event
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 */

// print ('@@1 =', toJson (document));
var deleted = document['v-s:deleted'];
var doc_uri = document['@'];	
var new_membership = 
{
	'@' : guid (), 
	'rdf:type' : [{data: 'v-s:Membership', type : _Uri}],
	'v-s:memberOf' : [{data: 'cfg:ReadResGroup', type : _Uri}],
	'v-s:resource'  : [{data: doc_uri, type : _Uri}],
	'rdfs:comment'  : [{data: "выдан cfg:Event_2", type : _String}]
};

if (deleted && deleted[0].data == true)
{
//print ('IS DELETED');
new_membership['v-s:deleted'] = deleted;
}
var res = put_individual (ticket, new_membership, _event_id);
if (res != 200 && res != 1022)
print ('res=', res, ' @@1 =', toJson (new_membership));			

var type = document['rdf:type'];
if (type && getUri (type) == 'v-s:Person')
{
new_membership = 
{
	'@' : guid (), 
	'rdf:type' : [{data: 'v-s:Membership', type : _Uri}],
	'v-s:memberOf' : [{data: 'cfg:ReadUser', type : _Uri}],
	'v-s:resource'  : [{data: doc_uri, type : _Uri}],
	'rdfs:comment'  : [{data: "выдан cfg:Event_2", type : _String}]
};
res = put_individual (ticket, new_membership, _event_id);
if (res != 200 && res != 1022)
	print ('res=', res, ' @@2 =', toJson (new_membership));			

}
  """ ;
  rdfs:comment "скрипт автоматической выдачи прав на чтение для оргструктуры + перенос атрибута v-s:deleted"@ru ;
  rdfs:label "Event_2"@en ;
  rdfs:label "Событие_2"@ru ;
.

cfg:Event_3
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAccount ;
  v-s:created "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:published "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:filter rdf:Property ;
  v-s:filter rdfs:Class ;
  v-s:filter rdfs:Datatype ;
  v-s:filter owl:Class ;
  v-s:filter owl:Ontology ;
  v-s:filter owl:DatatypeProperty ;
  v-s:filter owl:ObjectProperty ;
  v-s:filter owl:Restriction ;
  v-s:filter v-s:ClassModel ;
  v-s:filter v-ui:ClassTemplate ;
  v-s:filter v-ui:PropertySpecification ;
  v-s:filter v-ui:IntegerPropertySpecification ;
  v-s:filter v-ui:DecimalPropertySpecification ;
  v-s:filter v-ui:DatetimePropertySpecification ;
  v-s:filter v-ui:StringPropertySpecification ;
  v-s:filter v-ui:BooleanPropertySpecification ;
  v-s:filter v-ui:ObjectPropertySpecification ;
  v-s:filter v-s:Bundle ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = user whose actions triggered event
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 */

var doc_uri = document['@'];	
var new_membership = 
{
	'@' : guid (), 
	'rdf:type' : [{data: 'v-s:Membership', type : _Uri}],
	'v-s:memberOf' : [{data: 'cfg:ReadResGroup', type : _Uri}],
	'v-s:resource'  : [{data: doc_uri, type : _Uri}],
	'rdfs:comment'  : [{data: "выдан cfg:Event_3", type : _String}]
};

put_individual (ticket, new_membership, _event_id);
  """ ;
  rdfs:comment "скрипт автоматической выдачи прав на чтение для всех онтологий и UI настроек"@ru ;
  rdfs:label "Event_3"@en ;
  rdfs:label "Событие_3"@ru ;
.

cfg:Event_4
  rdf:type v-s:Event ;
  v-s:author cfg:VedaSystemAccount ;
  v-s:created "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:published "2014-01-31T15:28:18"^^xsd:dateTime ;
  v-s:filter rdf:Property ;
  v-s:filter rdfs:Class ;
  v-s:filter rdfs:Datatype ;
  v-s:filter owl:Class ;
  v-s:filter owl:Ontology ;
  v-s:filter owl:DatatypeProperty ;
  v-s:filter owl:ObjectProperty ;
  v-s:filter owl:Restriction ;
  v-s:filter v-s:ClassModel ;
  v-s:filter v-ui:ClassTemplate ;
  v-s:filter v-ui:PropertySpecification ;
  v-s:filter v-ui:IntegerPropertySpecification ;
  v-s:filter v-ui:DecimalPropertySpecification ;
  v-s:filter v-ui:DatetimePropertySpecification ;
  v-s:filter v-ui:StringPropertySpecification ;
  v-s:filter v-ui:BooleanPropertySpecification ;
  v-s:filter v-ui:ObjectPropertySpecification ;
  v-s:script """
/* Available variables:
 * ticket = superuser ticket
 * document = captured document
 * user_uri = user whose actions triggered event
 * prev_state = user whose actions triggered event
 * _event_id = id of the event to prevent cycles in triggers. Must be passed to every function that modifies DB.
 */

// Update ontology vsn
var vsn = {
	"@" : "cfg:OntoVsn", 
	"rdf:type" : [{data: "rdfs:Resource", type : _Uri}],
	"rdf:value" : [{data: guid(), type : _String}]
};
put_individual (ticket, vsn, _event_id);

/*	// Process ontology objects
function hasValue(doc, prop, val) {
	var any = !!(doc[prop] && doc[prop].length);
	if (!val) return any;
	return !!(any && doc[prop].filter(function (i) {
		return (i.type === val.type && i.data === val.data);
	}).length);
}

// owl:Thing && rdfs:Resource domain properties
var stopList = [
	//"rdf:type",
	//"rdfs:comment",
	//"rdfs:label",
	//"v-s:deleted",
	"owl:annotatedProperty",
	"owl:annotatedSource",
	"owl:annotatedTarget",
	"owl:bottomDataProperty",
	"owl:bottomObjectProperty",
	"owl:deprecated",
	"owl:differentFrom",
	"owl:members",
	"owl:sameAs",
	"owl:topObjectProperty",
	"owl:topDataProperty",
	"owl:versionInfo",
	"rdf:value",
	"rdfs:isDefinedBy",
	"rdfs:member",
	"rdfs:seeAlso"
];

var doc = document;
var type = document["rdf:type"][0].data;
var uri = document["@"];
switch (type) {
	// Process classes
	case "rdfs:Class":
	case "owl:Class":
		if ( uri === "rdfs:Resource" ) break;
		// If class is not a subclass of another then make it a subclass of rdfs:Resource
		if ( !hasValue(doc, "rdfs:subClassOf") ) {
			doc["rdfs:subClassOf"] = [{data: "rdfs:Resource", type: _Uri}];
		}
		doc["rdfs:subClassOf"].map( function ( i ) {
			var cls = {
				"@": i.data,
				"v-ui:hasSubClass": [{data: uri, type: _Uri}]
			}
			add_to_individual(ticket, cls, _event_id);
		});
		break;
	// Process properties
	case "rdf:Property" :
	case "owl:DatatypeProperty" :
	case "owl:ObjectProperty" :
	case "owl:OntologyProperty" :
	case "owl:AnnotationProperty" :
		if (stopList.indexOf(uri) >= 0) break;
		if ( hasValue(doc, "rdfs:domain") ) {
			doc["rdfs:domain"].map( function ( i ) {
				var cls = {
					"@": i.data,
					"v-ui:hasProperty": [{data: uri, type: _Uri}]
				}
				add_to_individual(ticket, cls, _event_id);
			});
		}
		break;
	// Process specifications
	case "v-ui:PropertySpecification" :
	case "v-ui:IntegerPropertySpecification" :
	case "v-ui:DecimalPropertySpecification" :
	case "v-ui:DatetimePropertySpecification" :
	case "v-ui:StringPropertySpecification" :
	case "v-ui:BooleanPropertySpecification" :
	case "v-ui:ObjectPropertySpecification" :
		if ( hasValue(doc, "v-ui:forClass") ) {
			doc["v-ui:forClass"].map( function ( i ) {
				var cls = {
					"@": i.data,
					"v-ui:hasSpecification": [{data: uri, type: _Uri}]
				}
				add_to_individual(ticket, cls, _event_id);
			});
		}
		break;
	// Process models
	case "v-s:ClassModel" :
		if ( hasValue(doc, "v-ui:forClass") ) {
			doc["v-ui:forClass"].map( function ( i ) {
				var cls = {
					"@": i.data,
					"v-ui:hasModel": [{data: uri, type: _Uri}]
				}
				add_to_individual(ticket, cls, _event_id);
			});
		}
		break;
	// Process templates
	case "v-ui:ClassTemplate" :
		if ( hasValue(doc, "v-ui:forClass") ) {
			doc["v-ui:forClass"].map( function ( i ) {
				var cls = {
					"@": i.data,
					"v-ui:hasTemplate": [{data: uri, type: _Uri}]
				}
				add_to_individual(ticket, cls, _event_id);
			});
		}
		break;
}*/
  """ ;
  rdfs:comment "Скрипт обработки индивидов онтологии"@ru ;
  rdfs:label "Event_4"@en ;
  rdfs:label "Событие_4"@ru ;
.

# -------------------------------------------------------------------------------------------------

cfg:VedaSystem
  rdf:type v-s:Person ;
  v-s:actualVersion cfg:VedaSystem ;
  v-s:birthday "2014-03-05"^^xsd:dateTime ;
  v-s:firstName "Veda"@en ;
  v-s:firstName "Веда"@ru ;
  v-s:hasAccount cfg:VedaSystemAccount ;
  v-s:lastName "System"@en ;
  v-s:lastName "Система"@ru ;
  rdfs:label "Veda System"@en ;
  rdfs:label "Система Веда"@ru ;
.

cfg:Permission_1
  rdf:type v-s:PermissionStatement ;
  v-s:canCreate "true"^^xsd:boolean ;
  v-s:canDelete "true"^^xsd:boolean ;
  v-s:canRead "true"^^xsd:boolean ;
  v-s:canUpdate "true"^^xsd:boolean ;
  v-s:permissionObject v-s:AllResourcesGroup ;
  v-s:permissionSubject cfg:VedaSystem ;
.

cfg:Permission_2
  rdf:type v-s:PermissionStatement ;
  v-s:author cfg:VedaSystem ;
  v-s:canRead "true"^^xsd:boolean ;
  v-s:created "2014-01-30T16:45:33"^^xsd:dateTime ;
  v-s:permissionObject cfg:ReadResGroup ;
  v-s:permissionSubject cfg:ReadUser ;
  v-s:published "2014-01-30T16:45:33"^^xsd:dateTime ;
  v-s:startTime "2014-01-30T16:45:33"^^xsd:dateTime ;
  rdfs:label "Permissions record rr"@en ;
  rdfs:label "Запись о выдаче прав rr"@ru ;
.

td:PersonTemplate1
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон персоны"@ru ;
  rdfs:label "Person template"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:template """
  <div>
    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="row">
          <div class="col-md-6">
	        <span about="v-s:Person" property="rdfs:label">Персона</span>
  	      </div>  
          <div class="col-md-6 text-right">
  	        <a href="#/@"><span property="@">ID</span></a>
  	        <a href="#/graph/@"><span class="glyphicon glyphicon-link"></span></a>
	      </div>  
	    </div>
      </div>
      <div class="panel-body">
		<div class="row">
			<div class="col-md-2">
				<div rel="v-s:hasImage" template="v-ui:ImageTemplate"></div>
				<veda-control type="file" rel="v-s:hasImage" class="-view edit -search"></veda-control>
			</div>
			<div class="col-md-10">
				<div class="row">
					<div class="col-md-12">
						<h3>
						  <span property="rdfs:label"><br></span>
						  <veda-control property="rdfs:label" type="string" class="-view edit search"></veda-control>
						</h3>
					</div>
				</div>
				<div class="row">
					<div class="col-md-3">
						<em about="v-s:lastName" property="rdfs:label">Фамилия</em>
						<div property="v-s:lastName"><br></div>
						<veda-control property="v-s:lastName" type="string" class="-view edit search"></veda-control>
					</div>
					<div class="col-md-3">
						<em about="v-s:firstName" property="rdfs:label">Имя</em>
						<div property="v-s:firstName"><br></div>
						<veda-control property="v-s:firstName" type="string" class="-view edit search"></veda-control>
					</div>
					<div class="col-md-3">
						<em about="v-s:middleName" property="rdfs:label">Отчество</em>
						<div property="v-s:middleName"><br></div>
						<veda-control property="v-s:middleName" type="string" class="-view edit search"></veda-control>
					</div>
						<div class="col-md-3">
						<em about="v-s:birthday" property="rdfs:label">День рождения</em>
						<div property="v-s:birthday"><br></div>
						<veda-control property="v-s:birthday" type="dateTime" class="-view edit search"></veda-control>
					</div>
				</div>
			</div>
		</div>
        <hr />
        <div class="row">
          <div class="col-md-6">
            <div rel="v-s:hasAccount" template="td:AccountTemplate1">шаблон: td:AccountTemplate1</div>
            <veda-control rel="v-s:hasAccount" type="link" class="-view edit search fulltext dropdown create"></veda-control>
          </div>
          <div class="col-md-6">
		    <div rel="v-ui:hasPreferences" template="td:PreferencesTemplate1" embedded="true">шаблон: td:PreferencesTemplate1</div>
		    <veda-control rel="v-ui:hasPreferences" type="link" class="-view edit search fulltext dropdown create"></veda-control>
		    <br />
		    <div rel="v-s:hasAppointment" embedded="true"></div>
		    <veda-control rel="v-s:hasAppointment" type="link" class="-view edit search fulltext dropdown create"></veda-control>
          </div>
        </div>
      </div>
      <div class="panel-footer">
        <!--button type="button" class="action btn btn-warning view edit -search" id="send">Отправить</button--!>
        <button type="button" class="action btn btn-primary view -edit -search" id="edit">Редактировать</button>
        <button type="button" class="action btn btn-success -view edit -search" id="save">Сохранить</button>
        <button type="button" class="action btn btn-default -view edit -search" id="cancel">Отмена</button>
        <!--button type="button" class="action btn btn-link view edit -search" id="delete">Удалить</button--!>
      </div>
    </div>
  </div>
""" ;
.
td:PsHasAppointmentPerson
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация назначения для класса Персона"@ru ;
  rdfs:label "Appointment property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-s:hasAppointment ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:queryPrefix "('rdf:type'=='v-s:Appointment')"^^xsd:string ;
.
td:AppointmentTemplate1
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон Назначения"@ru ;
  rdfs:label "Appointment template"@en ;
  v-ui:forClass v-s:Appointment ;
  v-ui:template """
  <div>
    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="row">
          <div class="col-md-6">
	        <span about="v-s:Appointment" property="rdfs:label">Имя класса</span>
  	      </div>  
          <div class="col-md-6 text-right">
  	        <a href="#/@"><span property="@">ID</span></a>
	      </div>  
	    </div>
      </div>
      <div class="panel-body">
        <h3 property="rdfs:label"></h3>
        <veda-control property="rdfs:label" type="string" class="-view edit search"></veda-control>
        <div class="row">
          <div class="col-md-6">
            <em about="v-s:employee" property="rdfs:label"></em>
            <div rel="v-s:employee" template="v-ui:LabelTemplate" class="view -edit search"></div>
            <veda-control rel="v-s:employee" type="link" class="-view edit search fullsearch fulltext full"></veda-control>
          </div>
          <div class="col-md-6">
            <em about="v-s:occupation" property="rdfs:label"></em>
            <div rel="v-s:occupation" template="v-ui:LabelTemplate" class="view -edit search"></div>
            <veda-control rel="v-s:occupation" type="link" class="-view edit search fullsearch fulltext"></veda-control>
          </div>
        </div>
        <br>
        <div class="row">
          <div class="col-md-6">
            <em about="v-s:parentUnit" property="rdfs:label"></em>
            <div rel="v-s:parentUnit" template="v-ui:LabelTemplate" class="view -edit search"></div>
            <veda-control rel="v-s:parentUnit" type="link" class="-view edit search fullsearch fulltext"></veda-control>
          </div>
        </div>        
      </div>
      <div class="panel-footer">
        <button type="button" class="action btn btn-primary view -edit -search" id="edit">Редактировать</button>
        <button type="button" class="action btn btn-success -view edit -search" id="save">Сохранить</button>
        <button type="button" class="action btn btn-default -view edit -search" id="cancel">Отмена</button>
        <button type="button" class="action btn btn-link view edit -search" id="delete">Удалить</button>
      </div>
    </div>
  </div>
  """ ;
.

td:AppointmentTemplate2
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон Назначения 2"@ru ;
  rdfs:label "Appointment template 2"@en ;
  v-ui:template """
	<div>
		<span rel="v-s:employee" template="v-ui:LabelTemplate">Работник</span>, 
		<span rel="v-s:occupation" template="v-ui:LabelTemplate">Должность</span>
	</div>
  """ ;
.

td:AccountTemplate1
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон Учетной записи"@ru ;
  rdfs:label "Account template"@en ;
  v-ui:forClass v-s:Account ;
  v-ui:template """
  <div>
    <div class="panel panel-default">
      <div class="panel-heading">
        <div class="row">
          <div class="col-md-6">
	        <span about="v-s:Account" property="rdfs:label">Имя класса</span>
  	      </div>  
          <div class="col-md-6 text-right">
            <a href="#/@"><span property="@">ID</span></a>
	      </div>  
	    </div>
      </div>
      <div class="panel-body">
        <h3 property="rdfs:label"><br></h3>
        <veda-control property="rdfs:label" type="string" class="-view edit search"></veda-control>
        <div class="row">
            <div class="col-md-12">
               <em about="v-s:owner" property="rdfs:label">Владелец</em>
               <div rel="v-s:owner" template="v-ui:LabelTemplate"></div>
               <veda-control rel="v-s:owner" type="link" class="-view edit search fullsearch fulltext"></veda-control>
            </div>
        </div>
        <br />
        <div class="row">
          <div class="col-md-6">
               <em about="v-s:mailbox" property="rdfs:label">E-mail</em>
               <div property="v-s:mailbox"><br></div>
               <veda-control property="v-s:mailbox" type="string" class="-view edit search"></veda-control>
          </div>
          <div class="col-md-6">
               <em about="v-s:login" property="rdfs:label">Логин</em>
               <div property="v-s:login"><br></div>
               <veda-control property="v-s:login" type="string" class="-view edit search"></veda-control>
	      </div>
        </div>
      </div>
        <button type="button" class="action btn btn-success -view edit -search" id="save">Сохранить</button>      
    </div>
  </div>
  """ ;
.

#td:PositionTemplate1
#  rdf:type v-ui:ClassTemplate ;
#  rdfs:label "Шаблон для класса Должность"@ru ;
#  rdfs:label "Template for Position class"@en ;
#  v-ui:forClass v-s:Position ;
#  v-ui:template """
#  <span property="rdfs:label">Должность</span>
#  """ ;
#.

td:PreferencesTemplate1
  rdf:type v-ui:ClassTemplate ;
  rdfs:label "Шаблон для класса Предпочтения"@ru ;
  rdfs:label "Template for Preferences class"@en ;
  v-ui:forClass v-ui:Preferences ;
  v-ui:template """
<div class="panel panel-default">
  <div class="panel-heading">
    <div class="row">
      <div class="col-md-4">
        <span about="v-ui:Preferences" property="rdfs:label">Предпочтения</span>
      </div>
      <div class="col-md-8 text-right">
        <a href="#/@"><span property="@">ID</span></a>
      </div>  
    </div>
  </div>
  <div class="panel-body">
    <div>
      <em about="v-ui:preferredLanguage" property="rdfs:label">Язык</em>:
      <ul>
        <li rel="v-ui:preferredLanguage" template="v-ui:LabelTemplate"></li>
        <!--li rel="v-ui:preferredLanguage">
          <span>
			  <span property="rdfs:label"></span>
			  <veda-control property="rdfs:label" type="string" class="-view edit search"></veda-control>
		  </span>
        </li-->
      </ul>
      <veda-control rel="v-ui:preferredLanguage" type="link" class="-view edit search fulltext dropdown"></veda-control>
      <em about="v-ui:displayedElements" property="rdfs:label">Отображать элементов</em>: 
      <span property="v-ui:displayedElements"></span>
      <veda-control property="v-ui:displayedElements" type="integer" class="-view edit search"></veda-control>
    </div>
  </div>
  <!--div class="panel-footer">
    <button type="button" class="action btn btn-primary view -edit -search" id="edit">Редактировать</button>
    <button type="button" class="action btn btn-success -view edit -search" id="save">Сохранить</button>
    <button type="button" class="action btn btn-default -view edit -search" id="cancel">Отмена</button>
    <button type="button" class="action btn btn-link view edit -search" id="delete">Удалить</button>
  </div-->
</div>

  """ ;
.
td:PropertySpecification5
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация работника для класса Назначение"@ru ;
  rdfs:label "Employee property specification for Appointment class"@en ;
  v-ui:forClass v-s:Appointment ;
  v-ui:forProperty v-s:employee ;
  v-ui:minCardinality "0"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:treeRoot td:MondiSyktyvkar ;
  v-ui:treeRoot td:MondiSyktyvkar ;
  v-ui:treeInProperty v-s:parentUnit ;
  v-ui:treeDisplayedProperty rdfs:label ;
.
td:PropertySpecification6
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация работника для класса Назначение"@ru ;
  rdfs:label "Employee property specification for Appointment class"@en ;
  v-ui:forClass v-s:Appointment ;
  v-ui:forProperty v-s:occupation ;
  v-ui:minCardinality "0"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
.
td:PsParentUnitForAppointment
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация родительского подразделения для класса Назначение"@ru ;
  rdfs:label "ParentUnit property specification for Appointment class"@en ;
  v-ui:forClass v-s:Appointment ;
  v-ui:forProperty v-s:parentUnit ;
  v-ui:queryPrefix "('rdf:type'=='v-s:Department')"^^xsd:string ;
  v-ui:minCardinality "0"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
.
td:PropertySpecification7
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация учетной записи для класса Персона"@ru ;
  rdfs:label "Account property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-s:hasAccount ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:tooltip "Обязательно к заполнению, единичное значение. Ссылка на объект класса Учетная запись."@ru ;
  v-ui:tooltip "Required, single value. Link to instance of Account class"@en ;
  v-ui:queryPrefix "('rdf:type'=='v-s:Account')"^^xsd:string ;
  v-ui:placeholder "Учетная запись"@ru ;
  v-ui:placeholder "Account"@en ;
.
td:PropertySpecification8
  rdf:type v-ui:ObjectPropertySpecification ;
  rdfs:label "Спецификация предпочтений для класса Персона"@ru ;
  rdfs:label "Preferences property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-ui:hasPreferences ;
#  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
#  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:tooltip "Обязательно к заполнению, единичное значение. Ссылка на объект класса Предпочтения."@ru ;
  v-ui:tooltip "Required, single value. Link to instance of Preferences class"@en ;
  v-ui:queryPrefix "('rdf:type'=='v-ui:Preferences')"^^xsd:string ;
.
td:PropertySpecification10
  rdf:type v-ui:IntegerPropertySpecification ;
  rdfs:label "Спецификация тестового свойства для класса Предпочтения"@ru ;
  rdfs:label "Test property specification for Preferences class"@en ;
  v-ui:forClass v-ui:Preferences ;
  v-ui:forProperty v-ui:displayedElements ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:tooltip "Обязательно к заполнению, единичное целочисленное значение."@ru ;
  v-ui:tooltip "Required, single integer value."@en ;
  v-ui:defaultIntegerValue "10"^^xsd:integer ;
.
td:PropertySpecification11
  rdf:type v-ui:IntegerPropertySpecification ;
  rdfs:label "Спецификация тестового свойства для класса Предпочтения"@ru ;
  rdfs:label "Test property specification for Preferences class"@en ;
  v-ui:forClass v-s:Account ;
  v-ui:forProperty v-s:login, v-s:password ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:tooltip "Обязательно к заполнению, единичное строковое значение."@ru ;
  v-ui:tooltip "Required, single string value."@en ;
.
td:PropertySpecification1
  rdf:type v-ui:DatetimePropertySpecification ;
  rdfs:label "Спецификация даты рождения для класса персона"@ru ;
  rdfs:label "Birthday property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-s:birthday ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:tooltip "Обязательно к заполнению, единичное значение. Формат ввода: 2011-08-19"@ru ;
  v-ui:tooltip "Required, single value. Format: 2011-08-19"@en ;
  v-ui:placeholder "день рождения"@ru ;
  v-ui:placeholder "birthday"@en ;
.

td:PropertySpecification2
  rdf:type v-ui:StringPropertySpecification ;
  rdfs:label "Спецификация имени для класса персона"@ru ;
  rdfs:label "First name property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-s:firstName ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "2"^^xsd:nonNegativeInteger ;
  v-ui:minLength "2"^^xsd:integer ;
  v-ui:maxLength "20"^^xsd:integer ;
  v-ui:tooltip "Обязательно к заполнению, единичное значение. Не менее 2 и не более 20 символов"@ru ;
  v-ui:tooltip "Required, single value. More than 2 and less than 20 characters"@en ;
  v-ui:placeholder "имя"@ru ;
  v-ui:placeholder "first name"@en ;
.
td:PropertySpecification3
  rdf:type v-ui:StringPropertySpecification ;
  rdfs:label "Спецификация фамилии для класса персона"@ru ;
  rdfs:label "Last name property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-s:lastName ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "2"^^xsd:nonNegativeInteger ;
  v-ui:minLength "2"^^xsd:integer ;
  v-ui:maxLength "20"^^xsd:integer ;
  v-ui:tooltip "Обязательно к заполнению, единичное значение. Не менее 2 и не более 20 символов"@ru ;
  v-ui:tooltip "Required, single value. More than 2 and less than 20 characters"@en ;
  v-ui:placeholder "фамилия"@ru ;
  v-ui:placeholder "last name"@en ;
.
td:PropertySpecification4
  rdf:type v-ui:StringPropertySpecification ;
  rdfs:label "Спецификация отчества для класса персона"@ru ;
  rdfs:label "Middle name property specification for Person class"@en ;
  v-ui:forClass v-s:Person ;
  v-ui:forProperty v-s:middleName ;
  v-ui:minCardinality "1"^^xsd:nonNegativeInteger ;
  v-ui:maxCardinality "2"^^xsd:nonNegativeInteger ;
  v-ui:minLength "2"^^xsd:integer ;
  v-ui:maxLength "20"^^xsd:integer ;  
  v-ui:tooltip "Обязательно к заполнению, единичное значение. Не менее 2 и не более 20 символов"@ru ;
  v-ui:tooltip "Required, single value. More than 2 and less than 20 characters"@en ;
  v-ui:placeholder "отчество"@ru ;
  v-ui:placeholder "middle name"@en ;
.

