# start with the global settings which will
# apply to all sections in the configuration.
global
  # specify the maximum connections across the board
  maxconn 1024
  # enable debug output
#  debug

# now set the default settings for each sub-section
defaults
  # stick with http traffic
  mode http
  # set the number of times HAProxy should attempt to
  # connect to the target
  retries 3
  # specify the number of connections per front and
  # back end
  maxconn 1024
  # specify some timeouts (all in milliseconds)
  timeout connect 5000

############ veda@client Configuration ###############

# here is the first of the front-end sections.
# this is where we specify our webmachine instances.
# in our case we start with just one instance, but
# we can add more later
frontend webfarm
  # listen on port 80 across all network interfaces
  bind *:80

  # by default, point at our backend configuration
  # which lists our webmachine instances (this is
  # configured below in another section)
  default_backend webmachines

  # indicate keep-alive
  option http-server-close

  # timeouts
  timeout client 5000

# this section indicates how the connectivity to
# all the instances of webmachine should work.
# Again, for dev there is only one instance, but
# in production there would be more.

backend webmachines

  # we'll specify a round-robin configuration in
  # case we add nodes down the track.
  balance roundrobin

  # enable the "X-Forware-For" header so that
  # we can see the client's IP in Webmachine,
  # not just the proxy's address
  option forwardfor

  # later down the track we'll be making the use
  # of cookies for various reasons. So we'll
  # enable support for this while we're here.
  cookie SERVERID insert nocache indirect

  # list the servers who are to be balanced
  # (just the one in the case of dev)
  server veda_client 127.0.0.1:8000 check
  server veda_client1 127.0.0.1:8001 check

  # timeouts
  timeout server 1200000
  timeout connect 3000

############ veda@core Configuration ###############

#frontend dbcluster
#  mode tcp
#  bind 127.0.0.1:8080
#  default_backend veda_core

  # timeouts
#  timeout client 1200000

#backend veda_core
#  mode tcp

  # use a standard round robin approach for load
  # balancing
#  balance roundrobin

  # timeouts
#  timeout server 1200000
#  timeout connect 3000

#  server veda_core 127.0.0.1:8080 check
#  server veda_core1 127.0.0.1:8081 check